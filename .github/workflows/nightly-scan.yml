name: NIGHTLY-SCAN

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  get-matrix-values:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-var.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - id: set-var
        run: |
          echo 'image<<EOF' >> $GITHUB_OUTPUT
          cat ./image-matrix.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
  
  anchore-scan:
    runs-on: ubuntu-latest
    needs:  get-matrix-values
    strategy:
      matrix:
        image: ${{fromJSON(needs.get-matrix-values.outputs.image)}}
    steps:
      - uses: actions/checkout@v3
      - name: Set job environment variables
        run:  cat JOB.env >> $GITHUB_ENV
      - name: Scan Java docker image for Sarif output
        id: scan
        uses: anchore/scan-action@v3
        with:
          image: defradigital/${{env.IMAGE_NAME}}:${{env.DEFRA_VERSION}}-java${{matrix.image.runTimeVersion}}
          fail-build: false
          severity-cutoff: "medium"
          output-format: "sarif"
      - name: Scan Java docker image for build failure
        uses: anchore/scan-action@v3
        with:
          image: defradigital/${{env.IMAGE_NAME}}:${{env.DEFRA_VERSION}}-java${{matrix.image.runTimeVersion}}
          fail-build: true
          severity-cutoff: "medium"
          only-fixed: true
      - name: Upload Anchore Grype SARIF report
        if: always() && steps.scan.outputs.sarif
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Inspect action SARIF report
        if: always() && steps.scan.outputs.sarif
        run: cat ${{ steps.scan.outputs.sarif }}
